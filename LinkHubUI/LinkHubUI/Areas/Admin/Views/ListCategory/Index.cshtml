@model IEnumerable<BOL.tbl_Category>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    function confirmDelete() {
        return confirm('Are you sure you want to delete??');
    }
</script>
<h2>Category List</h2>
@if (TempData["msg"] != null)
{
    <div class="alert alert-dismissable alert-info">
        <button class="close" type="button" data-dismiss="alert">×</button>
        @TempData["msg"].ToString()
    </div>
}
<p>
    @Html.ActionLink("Create New","Create")
</p>
<table class="table table-striped table-bordered table-hover ">
    <tr class="info">
        <th>
            @Html.ActionLink("CategoryName", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "CategoryName", page = (ViewBag.Page == null ? "1" : ViewBag.Page) })
            @*@Html.DisplayNameFor(model => model.CategoryName)*@
        </th>
        <th>
            @Html.ActionLink("CategoryDesc", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "CategoryDesc", page = (ViewBag.Page == null ? "1" : ViewBag.Page) })
            @*@Html.DisplayNameFor(model => model.CategoryDesc)*@
        </th>
        <th>Delete</th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryDesc)
            </td>
            <td>
                @Html.ActionLink("Delete", "Delete", new { id = item.CategoryId }, new {onclick="return confirmDelete()" })
            </td>
        </tr>
}

</table>

@{
    double totalPages = @ViewBag.TotalPages;
}

<ul class="pagination">

    @for (int i = 1; i <= totalPages; i++)
{
    if (i == ViewBag.Page)
    {
        <li class="active">@Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "CategoryName" : ViewBag.SortBy), Page = i })</li>
    }
    else
    {
        <li>@Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "CategoryName" : ViewBag.SortBy), Page = i })</li>
    }
}




</ul>




